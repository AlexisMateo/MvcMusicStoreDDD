{"name":"MVC MusicStore DDD","tagline":"The same MVC MusicStore published by Microsoft, but wrotten with all best practives design and architetural patterns as DDD, SelfValidation, SOLID and tests","body":"# MVC MusicStore Application\r\n\r\nThe same known [MusicStore](https://github.com/aspnet/MusicStore/) application, published by [Microsoft](http://microsoft.github.io/), but wrotten using tons of design and architectural patterns to force the delivery of a high quality code and provide a responsable development.\r\n\r\n# Implemented Tools\r\n\r\n* ASP.NET MVC 5.2.3\r\n* EntityFramework 6.1.2\r\n* ADO.NET 4.0\r\n* Dapper 1.38\r\n* SQL Server Compact 4.0\r\n* AutoMapper 3.3.1\r\n* Ninject 3.2.2.0\r\n* Service Locator 1.3\r\n\r\n# Patterns Applied \r\n\r\n* DDD - Domain Drive Design\r\n* SOLID\r\n  1. SRP - Single Responsability Principle\r\n  2. OCP - Open Close Principle\r\n  3. LSP - Liskov Substitution Principle\r\n  4. ISP - Interface Segregation Principle\r\n  5. DIP - Dependency Invertion Principle\r\n* Self Validation\r\n* TDD - Teste Driven Design\r\n* CrossCutting\r\n* Dependency Injection\r\n* Invertion of Control\r\n\r\n# This is BETA\r\n\r\n<blockquote>\"These are currently an early work in progress. It's been pushed here so contributors can create pull requests,\r\netc. Please don't complain unless you are willing to help ;)\" - by Vaughn Vernon</blockquote>\r\n\r\n# Collaborators\r\n\r\n* [Thiago Lunardi](http://thiagolunardi.net)\r\n* [Eduardo Pires](http://eduardopires.net.br)\r\n\r\n# Try it \r\n\r\n[![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://azuredeploy.net/)\r\n","google":"UA-46992733-4","note":"Don't delete this file! It's used internally to help with page regeneration."}